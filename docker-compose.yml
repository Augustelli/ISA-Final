services:
  elasticsearch:
    image: elasticsearch:8.15.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - isa-network

  logstash:
    image: logstash:8.15.3
    container_name: logstash
    depends_on:
      - elasticsearch
    ports:
      - "5044:5044"
    volumes:
      - ./conf.d/logstash/conf/logstash.conf:/usr/share/logstash/config/logstash.conf
    networks:
      - isa-network

  kibana:
    image: kibana:8.15.3
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - isa-network
    volumes:
      - ./conf.d/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml

  fluentd:
    image: bitnami/fluentd
    container_name: fluentd
    depends_on:
      - elasticsearch
    environment:
      FLUENT_ELASTICSEARCH_HOST: elasticsearch
      FLUENT_ELASTICSEARCH_PORT: 9200
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    volumes:
      - ./conf.d/fluentd/fluent.conf:/fluentd/etc/fluent.conf
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock

  jenkins:
    image: jenkins/jenkins:lts-jdk17
    container_name: jenkins
    user: root
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
    ports:
      - "8081:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - isa-network

  portainer:
    image: portainer/portainer
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/portainer:/data
    networks:
        - isa-network
    restart: unless-stopped


  isabe:
      image: jhipster/jhipster:latest
      extends:
        file: ./backend/src/main/docker/app.yml
        service: app
      depends_on:
        - mysql
      networks:
        - isa-network



  mysql:
    extends:
      file: ./backend/src/main/docker/app.yml
      service: mysql
    networks:
      - isa-network


  k6:
      image: grafana/k6
      container_name: k6
      volumes:
        - ./conf.d/k6/scripts:/scripts
      entrypoint: ["k6", "run", "/scripts/test.js"]
      networks:
        - isa-network

  # frontend:
  #   image: frontend
  #   build:
  #     context: contextPath
  #     dockerfile: Dockerfile
  #   networks:
  #     - isa-network


volumes:
  es_data:
    driver: local
  jenkins_home:
    driver: local

networks:
  isa-network:
    driver: bridge